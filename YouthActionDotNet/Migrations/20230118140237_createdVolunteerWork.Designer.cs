// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using YouthActionDotNet.Data;

#nullable disable

namespace YouthActionDotNet.Migrations
{
    [DbContext(typeof(DBContext))]
    [Migration("20230118140237_createdVolunteerWork")]
    partial class createdVolunteerWork
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.1");

            modelBuilder.Entity("YouthActionDotNet.Models.Project", b =>
                {
                    b.Property<string>("ProjectId")
                        .HasColumnType("TEXT");

                    b.Property<double>("ProjectBudget")
                        .HasColumnType("REAL");

                    b.Property<string>("ProjectCompletionDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProjectDescription")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProjectEndDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProjectName")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProjectStartDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProjectStatus")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProjectType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ServiceCenterId")
                        .HasColumnType("TEXT");

                    b.HasKey("ProjectId");

                    b.HasIndex("ServiceCenterId");

                    b.ToTable("Project", (string)null);
                });

            modelBuilder.Entity("YouthActionDotNet.Models.ServiceCenter", b =>
                {
                    b.Property<string>("ServiceCenterId")
                        .HasColumnType("TEXT");

                    b.Property<string>("RegionalDirectorId")
                        .HasColumnType("TEXT");

                    b.Property<string>("RegionalDirectorName")
                        .HasColumnType("TEXT");

                    b.Property<string>("ServiceCenterAddress")
                        .HasColumnType("TEXT");

                    b.Property<string>("ServiceCenterName")
                        .HasColumnType("TEXT");

                    b.HasKey("ServiceCenterId");

                    b.HasIndex("RegionalDirectorId");

                    b.ToTable("ServiceCenter", (string)null);
                });

            modelBuilder.Entity("YouthActionDotNet.Models.User", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.Property<string>("Role")
                        .HasColumnType("TEXT");

                    b.Property<string>("address")
                        .HasColumnType("TEXT");

                    b.Property<string>("phoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("username")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("YouthActionDotNet.Models.VolunteerWork", b =>
                {
                    b.Property<string>("VolunteerWorkId")
                        .HasColumnType("TEXT");

                    b.Property<string>("ShiftEnd")
                        .HasColumnType("TEXT");

                    b.Property<string>("ShiftStart")
                        .HasColumnType("TEXT");

                    b.Property<string>("SupervisingEmployee")
                        .HasColumnType("TEXT");

                    b.Property<string>("VolunteerId")
                        .HasColumnType("TEXT");

                    b.Property<string>("projectId")
                        .HasColumnType("TEXT");

                    b.HasKey("VolunteerWorkId");

                    b.HasIndex("SupervisingEmployee");

                    b.HasIndex("VolunteerId");

                    b.HasIndex("projectId");

                    b.ToTable("VolunteerWork", (string)null);
                });

            modelBuilder.Entity("YouthActionDotNet.Models.Donor", b =>
                {
                    b.HasBaseType("YouthActionDotNet.Models.User");

                    b.Property<string>("donorName")
                        .HasColumnType("TEXT");

                    b.Property<string>("donorType")
                        .HasColumnType("TEXT");

                    b.ToTable("Donor", (string)null);
                });

            modelBuilder.Entity("YouthActionDotNet.Models.Employee", b =>
                {
                    b.HasBaseType("YouthActionDotNet.Models.User");

                    b.Property<string>("BankAccountNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("BankName")
                        .HasColumnType("TEXT");

                    b.Property<string>("DateJoined")
                        .HasColumnType("TEXT");

                    b.Property<string>("EmployeeNationalId")
                        .HasColumnType("TEXT");

                    b.Property<string>("EmployeeRole")
                        .HasColumnType("TEXT");

                    b.Property<string>("EmployeeType")
                        .HasColumnType("TEXT");

                    b.Property<string>("PAYE")
                        .HasColumnType("TEXT");

                    b.ToTable("Employee", (string)null);
                });

            modelBuilder.Entity("YouthActionDotNet.Models.Volunteer", b =>
                {
                    b.HasBaseType("YouthActionDotNet.Models.User");

                    b.Property<string>("ApprovalStatus")
                        .HasColumnType("TEXT");

                    b.Property<string>("ApprovedBy")
                        .HasColumnType("TEXT");

                    b.Property<string>("CriminalHistory")
                        .HasColumnType("TEXT");

                    b.Property<string>("CriminalHistoryDesc")
                        .HasColumnType("TEXT");

                    b.Property<string>("Qualifications")
                        .HasColumnType("TEXT");

                    b.Property<string>("VolunteerDateBirth")
                        .HasColumnType("TEXT");

                    b.Property<string>("VolunteerDateJoined")
                        .HasColumnType("TEXT");

                    b.Property<string>("VolunteerNationalId")
                        .HasColumnType("TEXT");

                    b.HasIndex("ApprovedBy");

                    b.ToTable("Volunteer", (string)null);
                });

            modelBuilder.Entity("YouthActionDotNet.Models.Project", b =>
                {
                    b.HasOne("YouthActionDotNet.Models.ServiceCenter", "ServiceCenter")
                        .WithMany()
                        .HasForeignKey("ServiceCenterId");

                    b.Navigation("ServiceCenter");
                });

            modelBuilder.Entity("YouthActionDotNet.Models.ServiceCenter", b =>
                {
                    b.HasOne("YouthActionDotNet.Models.Employee", "RegionalDirector")
                        .WithMany()
                        .HasForeignKey("RegionalDirectorId");

                    b.Navigation("RegionalDirector");
                });

            modelBuilder.Entity("YouthActionDotNet.Models.VolunteerWork", b =>
                {
                    b.HasOne("YouthActionDotNet.Models.Employee", "employee")
                        .WithMany()
                        .HasForeignKey("SupervisingEmployee");

                    b.HasOne("YouthActionDotNet.Models.Volunteer", "volunteer")
                        .WithMany()
                        .HasForeignKey("VolunteerId");

                    b.HasOne("YouthActionDotNet.Models.Project", "project")
                        .WithMany()
                        .HasForeignKey("projectId");

                    b.Navigation("employee");

                    b.Navigation("project");

                    b.Navigation("volunteer");
                });

            modelBuilder.Entity("YouthActionDotNet.Models.Donor", b =>
                {
                    b.HasOne("YouthActionDotNet.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("YouthActionDotNet.Models.Employee", b =>
                {
                    b.HasOne("YouthActionDotNet.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("YouthActionDotNet.Models.Volunteer", b =>
                {
                    b.HasOne("YouthActionDotNet.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("ApprovedBy");

                    b.HasOne("YouthActionDotNet.Models.User", null)
                        .WithOne()
                        .HasForeignKey("YouthActionDotNet.Models.Volunteer", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
