@startuml
class EmployeeControl {
    + EmployeeControl(context:DBContext)
    + <<async>> Create(template:Employee) : Task<ActionResult<string>>
    + <<async>> Get(id:string) : Task<ActionResult<string>>
    + <<async>> Update(id:string, template:Employee) : Task<ActionResult<string>>
    + <<async>> UpdateAndFetchAll(id:string, template:Employee) : Task<ActionResult<string>>
    + <<async>> Delete(id:string) : Task<ActionResult<string>>
    + <<async>> Delete(template:Employee) : Task<ActionResult<string>>
    + <<async>> All() : Task<ActionResult<string>>
    + Settings() : string
    + Exists(id:string) : bool
}
class "IUserInterfaceCRUD`1"<T> {
}
class "GenericRepositoryIn`1"<T> {
}
class "GenericRepositoryOut`1"<T> {
}
"IUserInterfaceCRUD`1" "<Employee>" <|-- EmployeeControl
EmployeeControl --> "EmployeeRepositoryIn<Employee>" "GenericRepositoryIn`1"
EmployeeControl --> "EmployeeRepositoryOut<Employee>" "GenericRepositoryOut`1"
EmployeeControl --> "PermissionsRepositoryOut" PermissionsRepositoryOut
@enduml
