@startuml
class DonationsControl {
    + DonationsControl(context:DBContext)
    + <<async>> All() : Task<ActionResult<string>>
    + <<async>> Create(template:Donations) : Task<ActionResult<string>>
    + <<async>> Delete(id:string) : Task<ActionResult<string>>
    + <<async>> Delete(template:Donations) : Task<ActionResult<string>>
    + Exists(id:string) : bool
    + <<async>> Get(id:string) : Task<ActionResult<string>>
    + Settings() : string
    + <<async>> Update(id:string, template:Donations) : Task<ActionResult<string>>
    + <<async>> UpdateAndFetchAll(id:string, template:Donations) : Task<ActionResult<string>>
}
class "IUserInterfaceCRUD`1"<T> {
}
class "GenericRepositoryIn`1"<T> {
}
class "GenericRepositoryOut`1"<T> {
}
"IUserInterfaceCRUD`1" "<Donations>" <|-- DonationsControl
DonationsControl --> "DonationsRepositoryIn<Donations>" "GenericRepositoryIn`1"
DonationsControl --> "DonationsRepositoryOut<Donations>" "GenericRepositoryOut`1"
DonationsControl o-> "settings" JsonSerializerSettings
@enduml
